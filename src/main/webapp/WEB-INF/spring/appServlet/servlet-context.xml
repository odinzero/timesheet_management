<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:jee="http://www.springframework.org/schema/jee"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:mvc = "http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/jee
                                 http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/beans     
                http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing 
    infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources directory -->
      <resources mapping="/resources/**" location="/resources/" />    
    
    <mvc:annotation-driven />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
    in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <!-- package to look for annotated classes -->
    <context:component-scan base-package="org.timesheet.web" />
    <context:component-scan base-package="org.timesheet.service.dao" />
    <context:component-scan base-package="org.timesheet.service.impl" />
    
    
    <!-- we can use annotations -->
    <context:annotation-config/>
    
    <mvc:annotation-driven />
    <!-- for visibility file "message.properties" -->
    <beans:bean class = "org.springframework.context.support.ResourceBundleMessageSource"
         id = "messageSource">
        <beans:property name="basenames">
            <beans:list>
                <beans:value>employeeCreate</beans:value>
                <beans:value>employeeUpdate</beans:value>
                <beans:value>managerCreate</beans:value>
                <beans:value>managerUpdate</beans:value>
                <beans:value>taskCreate</beans:value>
                <beans:value>taskUpdate</beans:value>
                <beans:value>timesheetCreate</beans:value>
                <beans:value>timesheetUpdate</beans:value>
                <beans:value>signup</beans:value>
                <beans:value>login</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean> 

    <!-- data source for our database -->
    <beans:bean id="dataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName"
                        value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"/>
        <beans:property name="url" value="jdbc:mysql://localhost/timesheet"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value=""/>
    </beans:bean>

    <!-- configure hibernate session factory -->
   <!-- <beans:bean id="sessionFactory"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
     <beans:bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>org.timesheet.domain.Employee</beans:value>
                <beans:value>org.timesheet.domain.Manager</beans:value>
                <beans:value>org.timesheet.domain.Task</beans:value>
                <beans:value>org.timesheet.domain.Timesheet</beans:value>
                <beans:value>org.timesheet.domain.User</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="dialect">org.hibernate.dialect.MySQL5InnoDBDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
             <!--   <beans:prop key="hibernate.current_session_context_class">thread</beans:prop> -->
            </beans:props>
        </beans:property>
    </beans:bean>
    
    <!-- <beans:bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean> -->
    
    <beans:bean id="txManager"
                class="org.springframework.orm.hibernate4.HibernateTransactionManager">       
        <beans:property name="sessionFactory" ref="sessionFactory"></beans:property> 
    </beans:bean> 
    
    <!-- we will manage transactions with annotations -->
    <tx:annotation-driven transaction-manager="txManager"/>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
        
    <aop:config>
        <aop:pointcut id="userServicePointCut"
                      expression="execution(* org.timesheet.service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
    </aop:config>
    
    <beans:bean id="jdbcTemplate"
                class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <beans:constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
    </beans:bean>
    

</beans:beans>
